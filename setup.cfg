[metadata]
name = ott-jax
license = Apache 2.0
license_files = LICENSE
author_email = optimal.transport.tools@gmail.com
description = OTT: Optimal Transport Tools in Jax.
keywords =
    optimal transport
    sinkhorn
    wasserstein
    jax
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/ott-jax/ott
project_urls =
    Documentation = https://ott-jax.readthedocs.io
    Source Code = https://github.com/ott-jax/ott
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: Apache Software License
    Topic :: Scientific/Engineering :: Mathematics
    Natural Language :: English
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Typing :: Typed

[options]
packages = find:
zip_safe = False
python_requires = >=3.7
install_requires =
    importlib-metadata>=1.0; python_version < "3.8"
    absl-py>=0.7.0
    jax>=0.1.67
    jaxlib>=0.1.47
    numpy>=1.18.4, !=1.23.0 # https://github.com/google/jax/discussions/9951#discussioncomment-3017784
    matplotlib>=2.0.1
    flax>=0.3.6
    optax>=0.1.1
    typing_extensions; python_version < "3.8"
    PyYAML>=6.0  # https://github.com/google/flax/issues/2190

[options.extras_require]
test =
    pytest
    pytest-xdist
    pytest-memray
    pytest-cov
    chex
docs =
    sphinx>=4.0
    nbsphinx>=0.8.0
    recommonmark>=0.7.1
    ipython>=7.20.0
    sphinx_autodoc_typehints>=1.12.0
    sphinx-book-theme
    sphinxcontrib-bibtex
dev =
    pre-commit

[coverage:run]
branch = true
parallel = true
source = ott
omit = */__init__.py

[coverage:report]
exclude_lines =
    \#.*pragma:\s*no.?cover
    ^if __name__ == .__main__.:$
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
precision = 2
show_missing = True
skip_empty = True
sort = Miss

[tool:pytest]
minversion = 6.0
addopts = -n auto -v
testpaths =
    tests
markers =
    fast: Mark tests as fast.
