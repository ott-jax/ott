name: Tests

on:
  schedule:
  - cron: 00 00 * * 1
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fast-tests:
    name: Python ${{ matrix.python-version }} ${{ matrix.jax-version }} (fast)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        jax-version: [jax-default, jax-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox

    - name: Setup environment
      run: |
        tox -e py${{ matrix.python-version }}-${{ matrix.jax-version }} --notest -v

    - name: Run tests
      continue-on-error: ${{ matrix.jax-version == 'jax-latest' }}
      run: |
        tox -e py${{ matrix.python-version }}-${{ matrix.jax-version }} --skip-pkg-install -- -m fast --memray -n auto -vv

  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest]
        include:
        - python-version: '3.10'
          os: macos-14
        - python-version: '3.12'
          os: macos-15

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox

    - name: Setup environment
      run: |
        tox -e py${{ matrix.python-version }} --notest -v

    - name: Run tests
      run: |
        tox -e py${{ matrix.python-version }} --skip-pkg-install
      env:
        PYTEST_ADDOPTS: --memray -vv

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: tests-${{ matrix.os }}-${{ matrix.python-version }}
        name: unittests
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
        fail_ci_if_error: false
        verbose: true
