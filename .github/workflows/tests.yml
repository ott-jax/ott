name: tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8']
        os: [ubuntu-latest]
        test_mark: [fast, all]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build
      run: |
        set -xe
        python -VV
        pip install --upgrade pip setuptools
        pip install -e '.[test]'

    - name: Print versions
      run: |
        python -VV
        python -c "import jax; print('jax', jax.__version__)"
        python -c "import jaxlib; print('jaxlib', jaxlib.__version__)"

    - name: Run fast tests
      if: ${{ matrix.test_mark == 'fast' }}
      run: |
        pytest --cov=ott --cov-append --cov-report=xml --cov-report=term-missing --cov-config=setup.cfg --memray -m fast

    - name: Run all tests
      if: ${{ matrix.test_mark == 'all' }}
      run: |
        pytest --cov=ott --cov-append --cov-report=xml --cov-report=term-missing --cov-config=setup.cfg --memray -n 0

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests-${{ matrix.test_mark }}
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        verbose: true
